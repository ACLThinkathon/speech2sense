version: '3.8'

services:
  # FastAPI Backend Service
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: speech2sense-api
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
      - ./temp:/app/temp
      - ./speech2sense.db:/app/speech2sense.db
    networks:
      - speech2sense-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Streamlit Frontend Service
  ui:
    build:
      context: .
      dockerfile: Dockerfile.ui
    container_name: speech2sense-ui
    ports:
      - "8501:8501"
    environment:
      - PYTHONUNBUFFERED=1
      - API_URL=http://api:8000
    env_file:
      - .env
    depends_on:
      api:
        condition: service_healthy
    networks:
      - speech2sense-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: speech2sense-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
      - ui
    networks:
      - speech2sense-network
    restart: unless-stopped
    profiles:
      - production

  # Redis for Caching (Optional)
  redis:
    image: redis:alpine
    container_name: speech2sense-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - speech2sense-network
    restart: unless-stopped
    profiles:
      - production
    command: redis-server --appendonly yes

networks:
  speech2sense-network:
    driver: bridge

volumes:
  redis_data:
    driver: local